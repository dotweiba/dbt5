#!/bin/bash
#
# This file is released under the terms of the Artistic License.
# Please see the file LICENSE, included in this package, for details.
#
# Copyright (C) 2006-2010 Open Source Development Labs, Inc.
#               2006      Rilson Nascimento
#               2006-2014 Mark Wong
#               2014      2ndQuadrant, Ltd.
#

# Using bash because of arrays.

usage()
{
    echo "usage: `basename $0` -d DBNAME"
}

while getopts d:i:o: f; do
    case $f in
        d) DBNAME=$OPTARG;;
        i) INDIR=$OPTARG;;
        o) OUTDIR=$OPTARG;;
        \?) usage; exit 1;;
    esac
done

if [ -z $INDIR ]; then
    echo "Specify dbt5 results directory with -i"
    usage
    exit 1
fi

if [ -z $OUTDIR ]; then
    OUTDIR=$INDIR/report
fi

MIXFILE=$INDIR/driver/mix.log
if [ ! -f $MIXFILE ]; then
    echo "Missing file $MIXFILE"
    exit 1
fi

read DBMS < $INDIR/dbms.txt
echo "Generating report for $DBMS dbms"

TXNTAG=(sd bv cp mw ts tl to tu mf tr dm tc)

echo "Generating transaction distribution charts..."
i=0
# Order needs to match the definitions in inc/CETxnMixGenerator.h.
for TXNNAME in "Security Detail" "Broker Volume" "Customer Position" \
        "Market Watch" "Trade Status" "Trade Lookup" "Trade Order" \
        "Trade Update" "Market Feed" "Trade Result" "Data Maintenance" \
        "Trade Cleanup"; do
    dbt-plot-transaction-distribution "$TXNNAME" $i $MIXFILE \
            $OUTDIR/txn $(( $i + 1 ))
    i=$(( $i + 1 ))
done

echo "Generating transaction rate charts..."
dbt5-plot-transaction-rate $MIXFILE $OUTDIR/txn

echo "Generating operating system statistics charts..."
OSOUTDIR=$OUTDIR/db/os
mkdir -p $OSOUTDIR
dbt-plot-sar-cpu $INDIR/db/sar-cpu.csv $OSOUTDIR
dbt-plot-sar-blockdev $INDIR/db/sar-blockdev.csv $OSOUTDIR

echo "Generating database statistics charts..."
if [ "x$DBMS" = "xpgsql" ]; then
    DBOUTDIR=$OUTDIR/db
    dbt-pgsql-plot-database-stats $INDIR/db/pg_stat_databases.csv $DBT5DBNAME \
            $DBOUTDIR
fi

for table in `cat $INDIR/db/table-list.txt`; do
    dbt-pgsql-plot-table-stats $INDIR/db/pg_stat_tables.csv $table \
            $OUTDIR/db/tables 2> /dev/null
done
for index in `cat $INDIR/db/index-list.txt`; do
    dbt-pgsql-plot-index-stats $INDIR/db/pg_stat_indexes.csv $index \
            $OUTDIR/db/indexes 2> /dev/null
done

README=$INDIR/readme.txt
RESULTS=$INDIR/results.txt

DURATION=`grep Duration $README | cut -d " " -f 3`
DURATION=$(( $DURATION / 60 ))

TRCHART=txn/tr-transaction-rate.png

HTMLFILE=$OUTDIR/index.html

cat << __EOF__ > $HTMLFILE
<html>
<head>
<title>Database Test 5 Report</title>
</head>
<body>
<h1>Database Test 5 Report</h1>

<p>
`head -n 1 $README`
</p>

<table>
<tr>
<td>

<table>
<caption>Results Summary</caption>

<tr>
<td align="right">Trade Result Transactions per Second:</td>
<td>`grep trtps $RESULTS | cut -d " " -f 1`</td>
</tr>

<tr>
<td align="right">Customers:</td>
<td>`grep Customer $README | cut -d " " -f 4`</td>
</tr>

<tr>
<td align="right">Test Duration (minutes):</td>
<td>$DURATION</td>
</tr>

</table>
</td>
<td>
<a href="$TRCHART"><img width="128" src="$TRCHART" height="96" />
</td>
</tr>

</table>

<table border=1>
<caption>Transaction Summary</caption>

<tr>
<th colspan=2>Transaction</th>
<th colspan=2>Response Time (seconds)</th>
<th colspan=5></th>
<th colspan=2>Charts</th>
</tr>

<tr>
<th>Name</th>
<th>Mix %</th>
<th>Average</th>
<th>90th %</th>
<th>Total</th>
<th>Rollbacks</th>
<th>%</th>
<th>Warnings</th>
<th>Invalid</th>
<th>Transaction Rate</th>
<th>Response Time Distribution</th>
</tr>
__EOF__

i=0
for transaction in Security Broker Position Watch Status Lookup Order Update \
    Feed Result Data; do
    line=(`grep $transaction $RESULTS`)
    txnchart=txn/${TXNTAG[$i]}-transaction-rate.png
    dischart=txn/t$i-distribution.png
    cat << __EOF__ >> $HTMLFILE
<tr>
<td>${line[0]} ${line[1]}</td>
<td>${line[2]}</td>
<td>`echo ${line[3]} | sed -e 's/://'`</td>
<td>${line[4]}</td>
<td>${line[5]}</td>
<td>${line[6]}</td>
<td>`echo ${line[7]} | sed -e 's/\%//'`</td>
<td>${line[8]}</td>
<td>${line[9]}</td>
<td align="center">
<a href="$txnchart"><img width="128" src="$txnchart" height="96" />
</td>
<td align="center">
<a href="$dischart"><img width="128" src="$dischart" height="96" />
</td>
</tr>
__EOF__
    i=$(( $i + 1 ))
done

DBREADME=$INDIR/db/readme.txt

cp -p $INDIR/db/proc.txt $DBOUTDIR
cp -p $INDIR/db/param.txt $DBOUTDIR

OSINFO=(`head -n 1 $DBREADME`)
DBINFO=(`head -n 2 $DBREADME | tail -n 1`)

cat << __EOF__ >> $HTMLFILE
</table>

<table>
<caption>System Summary</caption>

<tr>
<td align="right">Operating System:</td>
<td>${OSINFO[0]} ${OSINFO[2]} ${OSINFO[11]}</td>
<td><a href="db/proc.txt">Settings</a></td>
</tr>

<tr>
<td align="right">Database Management System:</td>
<td>${DBINFO[0]} ${DBINFO[1]}</td>
<td><a href="db/param.txt">Settings</a></td>
</tr>

<td align="right">Notes:</td>
<td>`head -n 2 $README | tail -n 1`</td>

</tr>

<tr>
<td align="right">Database Charts:</td>
<td><a href="db">View Directories</a></td>
</tr>

</table>

</body>
</html>
__EOF__
